// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Break Gem Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 59 : TYPE_BREAKGEM

private alias 0 : STATE_INTACT
private alias 1 : STATE_SHARD

private alias object.value1 : object.EXyvel

private alias object.animation : player.animation
private alias object.gravity : player.gravity
private alias object.yvel : player.yvel
private alias object.value19 : player.enemyChainCounter

// Function declarations
reserve function BreakGem_DebugDraw
reserve function BreakGem_DebugSpawn

function BreakGem_DebugDraw
	DrawSprite(0)
end function


function BreakGem_DebugSpawn
	CreateTempObject(TypeName[Break Gem], 0, object.xpos, object.ypos)
end function


event ObjectMain

	switch object.state
	case STATE_INTACT
		object.inkEffect = INK_ALPHA
		temp0 = oscillation
		temp0 <<= 4
		Sin(temp1, temp0)
		temp1 >>= 5
		temp1 += 224
		object.alpha = temp1

		// Cycle through all players
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)

			// Is the player rolling?
			if player[currentPlayer].animation == ANI_JUMPING

				// Check if the gem should be broken
				BoxCollisionTest(C_BOX, object.entityPos, -16, -16, 16, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if checkResult == true

					// Player has rolled into gem, break the gem into fragments
					player[currentPlayer].yvel = -0x30000
					player[currentPlayer].gravity = GRAVITY_AIR

					CreateTempObject(TypeName[Break Gem], 6, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 24
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = -0x18000
					object[tempObjectPos].yvel = -0x1C000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800

					CreateTempObject(TypeName[Break Gem], 7, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 8
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = -0xC000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 8, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 8
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = 0xC000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 9, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 24
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = 0x18000
					object[tempObjectPos].yvel = -0x1C000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 10, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 24
					object[tempObjectPos].iypos -= 4
					object[tempObjectPos].xvel = -0x18000
					object[tempObjectPos].yvel = -0x1C000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 11, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 8
					object[tempObjectPos].iypos += 2
					object[tempObjectPos].xvel = -0xC000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 10, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 8
					object[tempObjectPos].iypos += 6
					object[tempObjectPos].xvel = 0xC000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 11, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 24
					object[tempObjectPos].iypos -= 4
					object[tempObjectPos].xvel = 0x18000
					object[tempObjectPos].yvel = -0x1C000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x2800
					
					CreateTempObject(TypeName[Break Gem], 2, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 24
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = -0x20000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x3800
					
					CreateTempObject(TypeName[Break Gem], 3, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 8
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = -0x10000
					object[tempObjectPos].yvel = -0x28000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x3800
					
					CreateTempObject(TypeName[Break Gem], 4, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 8
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = 0x10000
					object[tempObjectPos].yvel = -0x28000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x3800
					
					CreateTempObject(TypeName[Break Gem], 5, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 24
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = 0x20000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = STATE_SHARD
					object[tempObjectPos].drawOrder = 5
					object[tempObjectPos].EXyvel = 0x3800

					// Erase this object
					object.type = TypeName[Blank Object]

					switch player[currentPlayer].enemyChainCounter
					case 0
						player.score += 100
						break

					case 1
						player.score += 200
						break

					case 2
						player.score += 500
						break

					case 3
					case 4
					case 5
					case 6
					case 7
					case 8
					case 9
					case 10
					case 11
					case 12
					case 13
					case 14
						player.score += 1000
						break

					case 15
						player.score += 0x2710
						break

					end switch

					CreateTempObject(TypeName[Object Score], player[currentPlayer].enemyChainCounter, object.xpos, object.ypos)

					object[tempObjectPos].drawOrder = 5

					if player[currentPlayer].gravity == GRAVITY_AIR
						if player[currentPlayer].enemyChainCounter < 15
							player[currentPlayer].enemyChainCounter++
						end if
					end if

					PlaySfx(SfxName[Block Break], 0)
				end if
			else

				// Simply interact with the player as a box
				BoxCollisionTest(C_BOX, object.entityPos, -24, -16, 24, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)

			end if
		next
		break

	case STATE_SHARD
		object.xpos += object.xvel
		object.ypos += object.yvel
		object.yvel += object.EXyvel
		if object.outOfBounds == true
			object.type = TypeName[Blank Object]
		end if
		break

	end switch

end event


event ObjectDraw

	if object.state == 0
		DrawSpriteFX(0, FX_INK, object.xpos, object.ypos)
		DrawSprite(1)
	else
		DrawSprite(object.propertyValue)
	end if

end event


event ObjectStartup

	LoadSpriteSheet("HPZ/Objects.gif")

	// Sprite frames

	// Gem frames
	SpriteFrame(-32, -16, 64, 32, 1, 223)
	SpriteFrame(-32, 1, 64, 15, 115, 207)

	// Shard frames
	SpriteFrame(-8, -8, 16, 16, 115, 173)
	SpriteFrame(-8, -8, 16, 16, 132, 173)
	SpriteFrame(-8, -8, 16, 16, 149, 173)
	SpriteFrame(-8, -8, 16, 16, 166, 173)
	SpriteFrame(-8, -8, 16, 16, 115, 190)
	SpriteFrame(-8, -8, 16, 16, 132, 190)
	SpriteFrame(-8, -8, 16, 16, 149, 190)
	SpriteFrame(-8, -8, 16, 16, 166, 190)

	SpriteFrame(-4, -4, 8, 8, 183, 173)
	SpriteFrame(-4, -4, 8, 8, 183, 182)

	// Add this object to the debug mode object list
	SetTableValue(TypeName[Break Gem], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(BreakGem_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(BreakGem_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
